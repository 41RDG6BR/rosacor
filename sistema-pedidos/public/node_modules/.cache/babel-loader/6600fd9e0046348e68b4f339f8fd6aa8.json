{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\programs\\\\reactzzaria\\\\sistema-pedidos\\\\src\\\\pages\\\\login\\\\login.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Button, Grid } from '@material-ui/core';\nimport logo from './logo.png';\nimport firebase from 'services/firebase';\n\nfunction Login() {\n  const [userInfo, setUserInfo] = useState({\n    isUserLoggedIn: false,\n    user: null\n  });\n  const {\n    isUserLoggedIn,\n    user\n  } = userInfo;\n\n  const Login = () => {\n    const provider = new firebase.uth.GithubAuthProvider();\n    firebase.auth().signInWithRedirect(provider);\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      setUserInfo({\n        isUserLoggedIn: !!user,\n        user\n      }); // if (user) {\n      //     console.log('usuario logado', user)\n      //     this.setState({ isUserLoggedIn: true,\n      //         user\n      //     })\n      // }else{\n      //     console.log('usuario nao esta logado', user)\n      //     this.setState({ isUserLoggedIn: false, \n      //         user: null\n      //     })\n      // }\n    });\n  }, []);\n\n  const logout = () => {\n    firebase.auth().signOut().then(() => {\n      console.log('Deslogou');\n      this.setState({\n        isUserLoggedIn: false,\n        user: null\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, isUserLoggedIn && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, user.uid), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"sair\")), !isUserLoggedIn && /*#__PURE__*/React.createElement(GitHubButton, {\n    variant: \"contained\",\n    fullWidth: true,\n    onClick: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Entrar com github\"))));\n}\n\nconst Container = styled.div`\n    padding: 20px;\n`;\nconst GitHubButton = styled(Button)`\n&& {\n    font-size:20px;\n    padding: 15px;\n    text-transform: none;\n}\n`;\nexport default Login;","map":{"version":3,"sources":["C:/Users/User/programs/reactzzaria/sistema-pedidos/src/pages/login/login.js"],"names":["React","useState","useEffect","styled","Button","Grid","logo","firebase","Login","userInfo","setUserInfo","isUserLoggedIn","user","provider","uth","GithubAuthProvider","auth","signInWithRedirect","onAuthStateChanged","logout","signOut","then","console","log","setState","width","uid","Container","div","GitHubButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Grid } from '@material-ui/core'\r\nimport logo from './logo.png'\r\nimport firebase from 'services/firebase'\r\n\r\nfunction Login() {\r\n    const [userInfo, setUserInfo] = useState({\r\n        isUserLoggedIn: false,\r\n        user: null\r\n    })\r\n\r\n    const { isUserLoggedIn, user } = userInfo\r\n    \r\n    const Login = ()=>{\r\n        const provider = new firebase.uth.GithubAuthProvider()\r\n        firebase.auth().signInWithRedirect(provider)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            setUserInfo({\r\n                isUserLoggedIn: !!user,\r\n                user\r\n            })\r\n            // if (user) {\r\n            //     console.log('usuario logado', user)\r\n            //     this.setState({ isUserLoggedIn: true,\r\n            //         user\r\n            //     })\r\n            // }else{\r\n            //     console.log('usuario nao esta logado', user)\r\n            //     this.setState({ isUserLoggedIn: false, \r\n            //         user: null\r\n            //     })\r\n            // }\r\n        })\r\n    }, [])\r\n\r\n    const logout = () => {\r\n        firebase.auth().signOut().then(()=>{\r\n            console.log('Deslogou')\r\n            this.setState({\r\n                isUserLoggedIn: false,\r\n                user: null\r\n            })\r\n        })\r\n    }\r\n    \r\n\r\n    return(\r\n        <Container>\r\n            <Grid container justify='center' spacing={10}>\r\n                <Grid item>\r\n                    <img style={{width: '100%'}} src={logo} alt='Logo'/>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container justify='center'>\r\n                    {isUserLoggedIn && (\r\n                        <>\r\n                            <pre>{user.uid}</pre>\r\n                            <Button variant='contained' onClick={logout}>\r\n                                sair\r\n                            </Button>\r\n                        </>\r\n                    )}\r\n\r\n                    {!isUserLoggedIn && (                        \r\n                        <GitHubButton \r\n                            variant=\"contained\" \r\n                            fullWidth\r\n                            onClick={Login}>\r\n                                Entrar com github\r\n                        </GitHubButton>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        )\r\n}\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`\r\n\r\nconst GitHubButton = styled(Button)`\r\n&& {\r\n    font-size:20px;\r\n    padding: 15px;\r\n    text-transform: none;\r\n}\r\n`\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}