{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\programs\\\\reactzzaria\\\\sistema-pedidos\\\\src\\\\pages\\\\login\\\\login.js\";\nimport React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { Button, Grid } from '@material-ui/core';\nimport logo from './logo.png';\nimport firebase from 'services/firebase';\n\nclass Login extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isUserLoggedIn: false,\n      user: null\n    };\n\n    this.logout = () => {\n      firebase.auth().signOut().then(() => {\n        console.log('Deslogou');\n        this.setState({\n          isUserLoggedIn: false,\n          user: null\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        isUserLoggedIn: !!user,\n        user\n      }); // if (user) {\n      //     console.log('usuario logado', user)\n      //     this.setState({ isUserLoggedIn: true,\n      //         user\n      //     })\n      // }else{\n      //     console.log('usuario nao esta logado', user)\n      //     this.setState({ isUserLoggedIn: false, \n      //         user: null\n      //     })\n      // }\n    });\n  }\n\n  render() {\n    const {\n      isUserLoggedIn,\n      user\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '100%'\n      },\n      src: logo,\n      alt: \"Logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, isUserLoggedIn && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, user.uid), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"sair\")), !isUserLoggedIn && /*#__PURE__*/React.createElement(GitHubButton, {\n      variant: \"contained\",\n      fullWidth: true,\n      onClick: () => {\n        const provider = new firebase.auth.GithubAuthProvider();\n        firebase.auth().signInWithRedirect(provider);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"Entrar com github\"))));\n  }\n\n}\n\nconst Container = styled.div`\n    padding: 20px;\n`;\nconst GitHubButton = styled(Button)`\n&& {\n    font-size:20px;\n    padding: 15px;\n    text-transform: none;\n}\n`;\nexport default Login;","map":{"version":3,"sources":["C:/Users/User/programs/reactzzaria/sistema-pedidos/src/pages/login/login.js"],"names":["React","PureComponent","styled","Button","Grid","logo","firebase","Login","state","isUserLoggedIn","user","logout","auth","signOut","then","console","log","setState","componentDidMount","onAuthStateChanged","render","width","uid","provider","GithubAuthProvider","signInWithRedirect","Container","div","GitHubButton"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Grid } from '@material-ui/core'\r\nimport logo from './logo.png'\r\nimport firebase from 'services/firebase'\r\n\r\nclass Login extends PureComponent {\r\n\r\n    state = {\r\n        isUserLoggedIn: false,\r\n        user: null\r\n    }\r\n\r\ncomponentDidMount(){\r\n    firebase.auth().onAuthStateChanged((user)=>{\r\n        this.setState({\r\n            isUserLoggedIn: !!user,\r\n            user\r\n        })\r\n        // if (user) {\r\n        //     console.log('usuario logado', user)\r\n        //     this.setState({ isUserLoggedIn: true,\r\n        //         user\r\n        //     })\r\n        // }else{\r\n        //     console.log('usuario nao esta logado', user)\r\n        //     this.setState({ isUserLoggedIn: false, \r\n        //         user: null\r\n        //     })\r\n        // }\r\n    })\r\n}\r\n\r\nlogout = () => {\r\n    firebase.auth().signOut().then(()=>{\r\n        console.log('Deslogou')\r\n        this.setState({\r\n            isUserLoggedIn: false,\r\n            user: null\r\n        })\r\n    })\r\n}\r\n\r\nrender(){\r\n    const { isUserLoggedIn, user } = this.state\r\n    return(\r\n        <Container>\r\n            <Grid container justify='center' spacing={10}>\r\n                <Grid item>\r\n                    <img style={{width: '100%'}} src={logo} alt='Logo'/>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container justify='center'>\r\n                    {isUserLoggedIn && (\r\n                        <>\r\n                            <pre>{user.uid}</pre>\r\n                            <Button variant='contained' onClick={this.logout}>\r\n                                sair\r\n                            </Button>\r\n                        </>\r\n                    )}\r\n\r\n                    {!isUserLoggedIn && (                        \r\n                        <GitHubButton \r\n                            variant=\"contained\" \r\n                            fullWidth\r\n                            onClick={()=>{\r\n                            const provider = new firebase.auth.GithubAuthProvider()\r\n                            firebase.auth().signInWithRedirect(provider); \r\n                        }}>\r\n                                Entrar com github\r\n                        </GitHubButton>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`\r\n\r\nconst GitHubButton = styled(Button)`\r\n&& {\r\n    font-size:20px;\r\n    padding: 15px;\r\n    text-transform: none;\r\n}\r\n`\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}